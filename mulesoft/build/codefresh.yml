version: 1.0

stages:
  - clone
  - prepare
  - scan
  - build
  - package

steps:
  clone:
    title: Cloning MuleSoft Repository
    type: git-clone
    repo: ${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}
    revision: ${{CF_BRANCH}}
    git: gh-test-git-provider
    stage: clone

  CloneCodeFreshExtResource:
    title: Cloning Mulesoft Scripts Repository
    type: git-clone
    repo: ${{CF_REPO_OWNER}}/${{CF_EXTERNAL_REPO_NAME}}
    revision: ${{CF_EXTERNAL_BRANCH}}
    git: gh-test-git-provider
    stage: clone

  FetchSecrets:
    title: Fetch secrets from AWS Secrets Manager
    type: aws-secrets-manager
    arguments:
      AWS_DEFAULT_REGION: us-west-2
      secrets:
        - secret_arn: codefresh
          key: sonar_token
          store_in: SONAR_TOKEN
        - secret_arn: codefresh
          key: jira_api_token
          store_in: JIRA_API_TOKEN
        - secret_arn: mulesoft/${{TARGET_ENVIRONMENT}}/apikeys
          key: secure_key
          store_in: MULESOFT_SECURE_KEY
        - secret_arn: mulesoft/${{TARGET_ENVIRONMENT}}/apikeys
          key: repo_token
          store_in: MULESOFT_REPO_TOKEN
        - secret_arn: mulesoft/${{TARGET_ENVIRONMENT}}/apikeys
          key: client_id
          store_in: MULESOFT_CONNECTED_APP_CLIENT_ID
        - secret_arn: mulesoft/${{TARGET_ENVIRONMENT}}/apikeys
          key: client_secret
          store_in: MULESOFT_CONNECTED_APP_CLIENT_SECRET
        - secret_arn: mulesoft/${{TARGET_ENVIRONMENT}}/apikeys
          key: artifactory_username
          store_in: MULESOFT_ARTIFACTORY_USERNAME
        - secret_arn: mulesoft/${{TARGET_ENVIRONMENT}}/apikeys
          key: artifactory_password
          store_in: MULESOFT_ARTIFACTORY_PASSWORD
        - secret_arn: codefresh
          key: snyk_token
          store_in: SNYK_TOKEN
    stage: prepare

  SnykRepoScan:
    title: Snyk Repo Scan
    image: node:slim
    working_directory: ${{clone}}
    fail_fast: false
    environment:
        - SNYK_TOKEN=${SNYK_TOKEN}
        - SNYK_ORG=GH Screening
    commands:
      - yarn global add snyk
      - snyk test --severity-threshold=high
      - snyk monitor
    when:
        condition:
          all:
            noSkipCiInCommitMessage: 'includes(lower("${{CF_COMMIT_MESSAGE}}"), "skip snyk") == false'  
    stage: scan
    
  GenerateConnectedAppToken:
    title: Generate Connected App Token
    type: freestyle
    image: dwdraju/alpine-curl-jq:latest
    working_directory: ${{CloneCodeFreshExtResource}}
    commands:
      - ls -lth
      - mulesoft/scripts/fetch_connected_app_token.sh
    stage: prepare

  MavenBuild:
    title: Maven Build
    type: freestyle
    image: maven:3.8-openjdk-11-slim
    working_directory: ${{clone}}
    commands:
      - echo token is ${MULESOFT_CONNECTED_APP_TOKEN}
      - >-
        mvn -s ../${{CF_EXTERNAL_REPO_NAME}}/mulesoft/settings.xml clean package
        -DskipTests
        -Dmule.env=${{TARGET_ENVIRONMENT}}
        -DsecureKey=${MULESOFT_SECURE_KEY}
        -DRepoToken=${MULESOFT_REPO_TOKEN}
        -Dtoken=${MULESOFT_CONNECTED_APP_TOKEN}
        -Dmaven.repo.local=/codefresh/volume/m2_repository
    stage: build

  Artifactory:
    title: Upload to Artifactory
    type: freestyle
    image: maven:3.8-openjdk-11-slim
    working_directory: ${{clone}}
    commands:
      - echo token is ${MULESOFT_CONNECTED_APP_TOKEN}
      - >-
        mvn -s ../${{CF_EXTERNAL_REPO_NAME}}/mulesoft/settings.xml clean deploy
        -DskipTests
        -Dmule.env=${{TARGET_ENVIRONMENT}}
        -DsecureKey=${MULESOFT_SECURE_KEY}
        -DRepoToken=${MULESOFT_REPO_TOKEN}
        -Dtoken=${MULESOFT_CONNECTED_APP_TOKEN}
        -Dmaven.repo.local=/codefresh/volume/m2_repository
        -Dartifactory.username=${MULESOFT_ARTIFACTORY_USERNAME}
        -Dartifactory.password=${MULESOFT_ARTIFACTORY_PASSWORD}
    stage: package
